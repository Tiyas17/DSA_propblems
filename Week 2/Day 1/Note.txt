(A+B)%C=(A%C+B%C)%C
(A-B)%C=(A%C-B%C)%C
(A*B)%C=(A%C*B%C)%C
A^B % C=((A%C)^B)%C

-B%C=(C-B%C)%C
eg.,-4%7=(7-4%7)%7=(7-4)%7=3


3 Rules:
i)      Use long long instead of instead
ii)     use simple binary expressions
iii)    ((ans%mod)+mod)%mod


ll binary_expo(ll a,ll b)//O(log b)
{
    ll ans=1;
    while(b)
    {
        if(b%2==1)
        {
            ans=(ans*a)%mod;
        }
        a=(a*a)%mod;
        b=b/2;
    }
    return ans;
}


a^-1 mod p = a^(p-2) mod p
//Fermat's little theorem
//O(log p)


vector<ll> factinv(200001,1);
void init()
factinv[200000] = expo(fac[200000], mod - 2);
    for (int i = N - 2; i >= 1; i--)
        factinv[i] = (factinv[i + 1] * (i + 1)) % mod;


void solve()
{
    int a;
    cin >> a;
    vector<int> v;
    while (a)
    {
        v.push_back(a & 1);
        a = a >> 1;
    }
    reverse(v.begin(), v.end());
    for (auto i : v)
    {
        cout << i;
    }
}

